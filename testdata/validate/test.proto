syntax = "proto3";

package testdata;
option go_package = "github.com/nlachfr/protocel/testdata/validate";

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "testdata/validate/ref.proto";

import "validate/validate.proto";

service TestService {
    rpc TestRpc(TestRpcRequest) returns (google.protobuf.Empty) {};
}

message TestRpcRequest {
    string ref = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "testdata/Ref"
    ];
    Nested nested = 2;
    google.protobuf.FieldMask fm = 3;
    string raw = 4  [(protocel.validate.field).rule = {
        programs: [{
            expr: 'raw != ""'
        }]
    }];
}

message Nested {
    string name = 1 [(protocel.validate.field).rule = {
        programs: [{
            expr: 'name != ""'
        }]
    }];
    string value = 2;
    RefMultiple ref = 3;
}
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: options/options.proto

package options

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Options_Overloads_Type_Primitive int32

const (
	Options_Overloads_Type_PRIMITIVE_UNSPECIFIED Options_Overloads_Type_Primitive = 0
	Options_Overloads_Type_BOOL                  Options_Overloads_Type_Primitive = 1
	Options_Overloads_Type_INT                   Options_Overloads_Type_Primitive = 2
	Options_Overloads_Type_UINT                  Options_Overloads_Type_Primitive = 3
	Options_Overloads_Type_DOUBLE                Options_Overloads_Type_Primitive = 4
	Options_Overloads_Type_BYTES                 Options_Overloads_Type_Primitive = 5
	Options_Overloads_Type_STRING                Options_Overloads_Type_Primitive = 6
	Options_Overloads_Type_DURATION              Options_Overloads_Type_Primitive = 7
	Options_Overloads_Type_TIMESTAMP             Options_Overloads_Type_Primitive = 8
	Options_Overloads_Type_ERROR                 Options_Overloads_Type_Primitive = 9
	Options_Overloads_Type_DYN                   Options_Overloads_Type_Primitive = 10
	Options_Overloads_Type_ANY                   Options_Overloads_Type_Primitive = 11
)

// Enum value maps for Options_Overloads_Type_Primitive.
var (
	Options_Overloads_Type_Primitive_name = map[int32]string{
		0:  "PRIMITIVE_UNSPECIFIED",
		1:  "BOOL",
		2:  "INT",
		3:  "UINT",
		4:  "DOUBLE",
		5:  "BYTES",
		6:  "STRING",
		7:  "DURATION",
		8:  "TIMESTAMP",
		9:  "ERROR",
		10: "DYN",
		11: "ANY",
	}
	Options_Overloads_Type_Primitive_value = map[string]int32{
		"PRIMITIVE_UNSPECIFIED": 0,
		"BOOL":                  1,
		"INT":                   2,
		"UINT":                  3,
		"DOUBLE":                4,
		"BYTES":                 5,
		"STRING":                6,
		"DURATION":              7,
		"TIMESTAMP":             8,
		"ERROR":                 9,
		"DYN":                   10,
		"ANY":                   11,
	}
)

func (x Options_Overloads_Type_Primitive) Enum() *Options_Overloads_Type_Primitive {
	p := new(Options_Overloads_Type_Primitive)
	*p = x
	return p
}

func (x Options_Overloads_Type_Primitive) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Options_Overloads_Type_Primitive) Descriptor() protoreflect.EnumDescriptor {
	return file_options_options_proto_enumTypes[0].Descriptor()
}

func (Options_Overloads_Type_Primitive) Type() protoreflect.EnumType {
	return &file_options_options_proto_enumTypes[0]
}

func (x Options_Overloads_Type_Primitive) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Options_Overloads_Type_Primitive.Descriptor instead.
func (Options_Overloads_Type_Primitive) EnumDescriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Globals                 *Options_Globals   `protobuf:"bytes,1,opt,name=globals,proto3" json:"globals,omitempty"`
	Overloads               *Options_Overloads `protobuf:"bytes,2,opt,name=overloads,proto3" json:"overloads,omitempty"`
	StdlibOverridingEnabled bool               `protobuf:"varint,3,opt,name=stdlib_overriding_enabled,json=stdlibOverridingEnabled,proto3" json:"stdlib_overriding_enabled,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0}
}

func (x *Options) GetGlobals() *Options_Globals {
	if x != nil {
		return x.Globals
	}
	return nil
}

func (x *Options) GetOverloads() *Options_Overloads {
	if x != nil {
		return x.Overloads
	}
	return nil
}

func (x *Options) GetStdlibOverridingEnabled() bool {
	if x != nil {
		return x.StdlibOverridingEnabled
	}
	return false
}

type Options_Globals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions map[string]string `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Constants map[string]string `protobuf:"bytes,2,rep,name=constants,proto3" json:"constants,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Options_Globals) Reset() {
	*x = Options_Globals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Globals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Globals) ProtoMessage() {}

func (x *Options_Globals) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Globals.ProtoReflect.Descriptor instead.
func (*Options_Globals) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Options_Globals) GetFunctions() map[string]string {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *Options_Globals) GetConstants() map[string]string {
	if x != nil {
		return x.Constants
	}
	return nil
}

type Options_Overloads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions map[string]*Options_Overloads_Function `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Variables map[string]*Options_Overloads_Type     `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Options_Overloads) Reset() {
	*x = Options_Overloads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Overloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Overloads) ProtoMessage() {}

func (x *Options_Overloads) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Overloads.ProtoReflect.Descriptor instead.
func (*Options_Overloads) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Options_Overloads) GetFunctions() map[string]*Options_Overloads_Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *Options_Overloads) GetVariables() map[string]*Options_Overloads_Type {
	if x != nil {
		return x.Variables
	}
	return nil
}

type Options_Overloads_Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Options_Overloads_Type_Primitive_
	//	*Options_Overloads_Type_Object
	//	*Options_Overloads_Type_Array_
	//	*Options_Overloads_Type_Map_
	Type isOptions_Overloads_Type_Type `protobuf_oneof:"type"`
}

func (x *Options_Overloads_Type) Reset() {
	*x = Options_Overloads_Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Overloads_Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Overloads_Type) ProtoMessage() {}

func (x *Options_Overloads_Type) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Overloads_Type.ProtoReflect.Descriptor instead.
func (*Options_Overloads_Type) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (m *Options_Overloads_Type) GetType() isOptions_Overloads_Type_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Options_Overloads_Type) GetPrimitive() Options_Overloads_Type_Primitive {
	if x, ok := x.GetType().(*Options_Overloads_Type_Primitive_); ok {
		return x.Primitive
	}
	return Options_Overloads_Type_PRIMITIVE_UNSPECIFIED
}

func (x *Options_Overloads_Type) GetObject() string {
	if x, ok := x.GetType().(*Options_Overloads_Type_Object); ok {
		return x.Object
	}
	return ""
}

func (x *Options_Overloads_Type) GetArray() *Options_Overloads_Type_Array {
	if x, ok := x.GetType().(*Options_Overloads_Type_Array_); ok {
		return x.Array
	}
	return nil
}

func (x *Options_Overloads_Type) GetMap() *Options_Overloads_Type_Map {
	if x, ok := x.GetType().(*Options_Overloads_Type_Map_); ok {
		return x.Map
	}
	return nil
}

type isOptions_Overloads_Type_Type interface {
	isOptions_Overloads_Type_Type()
}

type Options_Overloads_Type_Primitive_ struct {
	Primitive Options_Overloads_Type_Primitive `protobuf:"varint,1,opt,name=primitive,proto3,enum=protocel.options.Options_Overloads_Type_Primitive,oneof"`
}

type Options_Overloads_Type_Object struct {
	Object string `protobuf:"bytes,2,opt,name=object,proto3,oneof"`
}

type Options_Overloads_Type_Array_ struct {
	Array *Options_Overloads_Type_Array `protobuf:"bytes,3,opt,name=array,proto3,oneof"`
}

type Options_Overloads_Type_Map_ struct {
	Map *Options_Overloads_Type_Map `protobuf:"bytes,4,opt,name=map,proto3,oneof"`
}

func (*Options_Overloads_Type_Primitive_) isOptions_Overloads_Type_Type() {}

func (*Options_Overloads_Type_Object) isOptions_Overloads_Type_Type() {}

func (*Options_Overloads_Type_Array_) isOptions_Overloads_Type_Type() {}

func (*Options_Overloads_Type_Map_) isOptions_Overloads_Type_Type() {}

type Options_Overloads_Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args   []*Options_Overloads_Type `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Result *Options_Overloads_Type   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Options_Overloads_Function) Reset() {
	*x = Options_Overloads_Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Overloads_Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Overloads_Function) ProtoMessage() {}

func (x *Options_Overloads_Function) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Overloads_Function.ProtoReflect.Descriptor instead.
func (*Options_Overloads_Function) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Options_Overloads_Function) GetArgs() []*Options_Overloads_Type {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Options_Overloads_Function) GetResult() *Options_Overloads_Type {
	if x != nil {
		return x.Result
	}
	return nil
}

type Options_Overloads_Type_Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *Options_Overloads_Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Options_Overloads_Type_Array) Reset() {
	*x = Options_Overloads_Type_Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Overloads_Type_Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Overloads_Type_Array) ProtoMessage() {}

func (x *Options_Overloads_Type_Array) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Overloads_Type_Array.ProtoReflect.Descriptor instead.
func (*Options_Overloads_Type_Array) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Options_Overloads_Type_Array) GetType() *Options_Overloads_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

type Options_Overloads_Type_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *Options_Overloads_Type `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Options_Overloads_Type `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Options_Overloads_Type_Map) Reset() {
	*x = Options_Overloads_Type_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_options_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options_Overloads_Type_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options_Overloads_Type_Map) ProtoMessage() {}

func (x *Options_Overloads_Type_Map) ProtoReflect() protoreflect.Message {
	mi := &file_options_options_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options_Overloads_Type_Map.ProtoReflect.Descriptor instead.
func (*Options_Overloads_Type_Map) Descriptor() ([]byte, []int) {
	return file_options_options_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *Options_Overloads_Type_Map) GetKey() *Options_Overloads_Type {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Options_Overloads_Type_Map) GetValue() *Options_Overloads_Type {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_options_options_proto protoreflect.FileDescriptor

var file_options_options_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65,
	0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x0c, 0x0a, 0x07,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x52, 0x07, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x09, 0x6f, 0x76,
	0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x74, 0x64, 0x6c, 0x69,
	0x62, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x74, 0x64, 0x6c,
	0x69, 0x62, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x1a, 0xa5, 0x02, 0x0a, 0x07, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x12,
	0x4e, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x1a,
	0x3c, 0x0a, 0x0e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x87, 0x09, 0x0a, 0x09,
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0xf4, 0x04,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x40, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x45,
	0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x81, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x50, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x49, 0x4d, 0x49,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x49, 0x4e, 0x54, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x59, 0x54, 0x45, 0x53, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x08, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x59,
	0x4e, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x0b, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x8a, 0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x6a, 0x0a, 0x0e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a,
	0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x65, 0x6c, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6c, 0x61, 0x63, 0x68, 0x66, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x65, 0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_options_options_proto_rawDescOnce sync.Once
	file_options_options_proto_rawDescData = file_options_options_proto_rawDesc
)

func file_options_options_proto_rawDescGZIP() []byte {
	file_options_options_proto_rawDescOnce.Do(func() {
		file_options_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_options_proto_rawDescData)
	})
	return file_options_options_proto_rawDescData
}

var file_options_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_options_options_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_options_options_proto_goTypes = []interface{}{
	(Options_Overloads_Type_Primitive)(0), // 0: protocel.options.Options.Overloads.Type.Primitive
	(*Options)(nil),                       // 1: protocel.options.Options
	(*Options_Globals)(nil),               // 2: protocel.options.Options.Globals
	(*Options_Overloads)(nil),             // 3: protocel.options.Options.Overloads
	nil,                                   // 4: protocel.options.Options.Globals.FunctionsEntry
	nil,                                   // 5: protocel.options.Options.Globals.ConstantsEntry
	(*Options_Overloads_Type)(nil),        // 6: protocel.options.Options.Overloads.Type
	(*Options_Overloads_Function)(nil),    // 7: protocel.options.Options.Overloads.Function
	nil,                                   // 8: protocel.options.Options.Overloads.FunctionsEntry
	nil,                                   // 9: protocel.options.Options.Overloads.VariablesEntry
	(*Options_Overloads_Type_Array)(nil),  // 10: protocel.options.Options.Overloads.Type.Array
	(*Options_Overloads_Type_Map)(nil),    // 11: protocel.options.Options.Overloads.Type.Map
}
var file_options_options_proto_depIdxs = []int32{
	2,  // 0: protocel.options.Options.globals:type_name -> protocel.options.Options.Globals
	3,  // 1: protocel.options.Options.overloads:type_name -> protocel.options.Options.Overloads
	4,  // 2: protocel.options.Options.Globals.functions:type_name -> protocel.options.Options.Globals.FunctionsEntry
	5,  // 3: protocel.options.Options.Globals.constants:type_name -> protocel.options.Options.Globals.ConstantsEntry
	8,  // 4: protocel.options.Options.Overloads.functions:type_name -> protocel.options.Options.Overloads.FunctionsEntry
	9,  // 5: protocel.options.Options.Overloads.variables:type_name -> protocel.options.Options.Overloads.VariablesEntry
	0,  // 6: protocel.options.Options.Overloads.Type.primitive:type_name -> protocel.options.Options.Overloads.Type.Primitive
	10, // 7: protocel.options.Options.Overloads.Type.array:type_name -> protocel.options.Options.Overloads.Type.Array
	11, // 8: protocel.options.Options.Overloads.Type.map:type_name -> protocel.options.Options.Overloads.Type.Map
	6,  // 9: protocel.options.Options.Overloads.Function.args:type_name -> protocel.options.Options.Overloads.Type
	6,  // 10: protocel.options.Options.Overloads.Function.result:type_name -> protocel.options.Options.Overloads.Type
	7,  // 11: protocel.options.Options.Overloads.FunctionsEntry.value:type_name -> protocel.options.Options.Overloads.Function
	6,  // 12: protocel.options.Options.Overloads.VariablesEntry.value:type_name -> protocel.options.Options.Overloads.Type
	6,  // 13: protocel.options.Options.Overloads.Type.Array.type:type_name -> protocel.options.Options.Overloads.Type
	6,  // 14: protocel.options.Options.Overloads.Type.Map.key:type_name -> protocel.options.Options.Overloads.Type
	6,  // 15: protocel.options.Options.Overloads.Type.Map.value:type_name -> protocel.options.Options.Overloads.Type
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_options_options_proto_init() }
func file_options_options_proto_init() {
	if File_options_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_options_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Globals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Overloads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Overloads_Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Overloads_Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Overloads_Type_Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_options_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options_Overloads_Type_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_options_options_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Options_Overloads_Type_Primitive_)(nil),
		(*Options_Overloads_Type_Object)(nil),
		(*Options_Overloads_Type_Array_)(nil),
		(*Options_Overloads_Type_Map_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_options_options_proto_goTypes,
		DependencyIndexes: file_options_options_proto_depIdxs,
		EnumInfos:         file_options_options_proto_enumTypes,
		MessageInfos:      file_options_options_proto_msgTypes,
	}.Build()
	File_options_options_proto = out.File
	file_options_options_proto_rawDesc = nil
	file_options_options_proto_goTypes = nil
	file_options_options_proto_depIdxs = nil
}
